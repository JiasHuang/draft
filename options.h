
/*
 * This file is automatically generated from option.py.
 * Do not edit it directly.
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <getopt.h>

enum {
    XOPT_INPUT,
    XOPT_OUTPUT,
    XOPT_SHOW_VERSION,
    XOPT_HELP
};

struct xopt {
    char* input[16];
    int   input_cnt;
    char* output;
    int   output_cnt;
    char  show_version;
    int   show_version_cnt;
};

static struct option xopt_long_options[] = {
    {"input",        required_argument, 0, XOPT_INPUT},
    {"output",       required_argument, 0, XOPT_OUTPUT},
    {"show-version",       no_argument, 0, XOPT_SHOW_VERSION},
    {"help",               no_argument, 0, XOPT_HELP},
    {0, 0, 0, 0}
};

#define XOPT_SHORT_OPTIONS "i:o:"

static void xopt_print_usage ()
{
    printf("\t-i, --input file  : input file\n");
    printf("\t-o, --output file : output file (Default: out.log)\n");
    printf("\t--show-verion     : show version\n");
}

static void xopt_parse_args(struct xopt *xopt, int argc, char **argv)
{
    int opt;

    memset(xopt, 0, sizeof(*xopt));

    xopt->output = (char*)"out.log";

    while ((opt = getopt_long (argc, argv, XOPT_SHORT_OPTIONS, xopt_long_options, NULL)) != -1) {
        switch (opt) {
            case 'i':
            case XOPT_INPUT:
                if (xopt->input_cnt < 16) xopt->input[xopt->input_cnt] = optarg;
                xopt->input_cnt++;
                break;
            case 'o':
            case XOPT_OUTPUT:
                xopt->output = optarg;
                xopt->output_cnt++;
                break;
            case XOPT_SHOW_VERSION:
                xopt->show_version = 1;
                xopt->show_version_cnt++;
                break;
            case XOPT_HELP:
            default:
                xopt_print_usage();
                exit(0);
                break;
        }
    }
}


